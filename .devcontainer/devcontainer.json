// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.122.1/containers/ubuntu
{
	"name": "ubuntu-24.04",
	"build": {
		"dockerfile": "Dockerfile"
		// ,
		// Update 'VARIANT' to pick an Ubuntu version. Rebuild the container 
		// if it already exists to update. Available variants: 18.04, 20.04
		// "args": { "VARIANT": "20.04" }
	},

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"vscjava.vscode-java-debug",
		"vscjava.vscode-java-dependency",
		"vscjava.vscode-java-pack",
		"vscjava.vscode-java-test",
		"redhat.java",
		"vscjava.vscode-maven",
		"visualstudioexptteam.vscodeintellicode",
		"ms-vscode.cpptools",
		"felipecaputo.git-project-manager",
		"technosophos.vscode-make",
		"tobiastao.vscode-md",
		"walkme.java-extension-pack",
		"ms-azuretools.vscode-docker",
		"ms-vscode.cpptools-extension-pack"
	]

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "uname -a",

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}